name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

jobs:
  test:
    name: Test on Node.js ${{ matrix.node-version }} and ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]
        os: [ubuntu-latest, macos-latest, windows-latest]
        
    steps:
    - name: Checkout code
      uses: actions/checkout@v5
      
    - name: Setup PNPM
      uses: pnpm/action-setup@v2
      with:
        version: 8
        
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'pnpm'
        
    - name: Install dependencies
      run: pnpm install --frozen-lockfile
      
    - name: Run linting
      run: pnpm run lint
      
    - name: Check formatting
      run: pnpm run format:check
      
    - name: Run tests
      run: pnpm run test:coverage
      
    - name: Upload coverage to Codecov
      if: matrix.node-version == '20.x' && matrix.os == 'ubuntu-latest'
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage/lcov.info
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false
        
    - name: Build project
      run: pnpm run build
      
    - name: Test CLI functionality (Linux/macOS)
      if: runner.os != 'Windows'
      run: |
        node dist/cli/src/index.js --help
        node dist/cli/src/index.js list || true
        
    - name: Test CLI functionality (Windows)
      if: runner.os == 'Windows'
      run: |
        node dist/cli/src/index.js --help
        node dist/cli/src/index.js list
      continue-on-error: true
      
  security:
    name: Security audit
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v5
      
    - name: Setup PNPM
      uses: pnpm/action-setup@v2
      with:
        version: 8
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'pnpm'
        
    - name: Install dependencies
      run: pnpm install --frozen-lockfile
      
    - name: Run security audit
      run: pnpm audit --audit-level moderate
      
    - name: Check for known vulnerabilities
      run: pnpm audit --audit-level high --prod
      
  build-validation:
    name: Build validation
    runs-on: ubuntu-latest
    needs: [test]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v5
      
    - name: Setup PNPM
      uses: pnpm/action-setup@v2
      with:
        version: 8
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'pnpm'
        
    - name: Install dependencies
      run: pnpm install --frozen-lockfile
      
    - name: Build for production
      run: pnpm run build
      
    - name: Validate package contents
      run: |
        # Check that all required files are present
        test -f "dist/cli/src/index.js" || exit 1
        test -f "dist/core/src/index.js" || exit 1
        
    - name: Test package installation
      run: |
        # Pack the package and test installation
        pnpm pack
        npm install -g kontext-cli-*.tgz
        kontext --help
        npm uninstall -g kontext-cli